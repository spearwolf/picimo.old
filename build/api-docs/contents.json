{ "ref": { "Picimo.App": { "name": "Picimo.App", "type": "programming-interface", "interfaces": [ { "name": "Picimo.App", "description": "Der Anfang von allem. Das ist der __Main Controller__ deiner App.\nDer einfachste Weg eine App Instanz zu erzeugen ist mittels\n\n`let app = new Picimo.App(/* options */);`\n\nDas `<canvas>` Element wird automatisch erzeugt und unterhalb von *document.body* in das DOM eingefügt.\nAlternativ ist die Angabe des Container Elements mittels **appendTo** möglich.\nWill man stattdessen ein vorhandenes `<canvas>` nutzen, oder dieses selbst erzeugen, übergibt man dieses\nmit der Option **canvas** oder als ersten Parameter bei der Erzeugung der App Instanz:\n\n`let app = new Picimo.App(myCanvas/* , options */);`\n\nDie wohl wichtigste Property einer App ist die *root* scene `app.scene`\n\nDie App bietet auch Zugriff auf das *Sprite, Texture* und *Shader* Management.\n", "extends": "Picimo.events.CustomEvent", "attributes": [ { "name": "canvas", "type": "HTMLCanvasElement", "readonly": true, "description": "The html _webgl canvas_ dom element." }, { "name": "scene", "type": "Picimo.sg.Scene", "readonly": true }, { "name": "sprites", "type": "Picimo.sprites.SpriteFactory", "readonly": true }, { "name": "texture", "type": "Picimo.webgl.TextureManager", "readonly": true }, { "name": "shader", "type": "Picimo.webgl.ShaderManager", "readonly": true } ], "functions": [ { "name": "loadTextureAtlas", "args": [ { "name": "url", "type": "string" } ], "returns": "Promise<picimo.core.textureatlas>" }, { "name": "loadTexture", "args": [ { "name": "url", "type": "string" } ], "returns": "Promise<picimo.core.texture>" } ], "constructor": { "args": [ { "name": "url", "type": "HTMLCanvasElement", "nullable": true, "optional": true }, { "name": "options", "type": "Picimo.App.Options", "nullable": true, "optional": true } ] } } ], "dictionaries": [ { "name": "Picimo.App.Options", "attributes": [ { "name": "alpha", "type": "boolean", "default": "false", "required": false }, { "name": "antialias", "type": "boolean", "default": "false" }, { "name": "stats", "type": "boolean", "default": "false" }, { "name": "canvas", "type": "HTMLCanvasElement", "default": "null" }, { "name": "appendTo", "type": "HTMLElement", "default": "null" }, { "name": "bgColor", "type": [ "string", "Picimo.utils.Color" ], "default": "'#000000'" }, { "name": "assetBaseUrl", "type": "string", "default": "null" } ] } ] }, "Picimo.events.CustomEvent": { "name": "Picimo.events.CustomEvent", "type": "programming-interface", "interfaces": [ { "name": "Picimo.events.CustomEvent", "description": "Publish/subscribe events api for custom javascript objects.\n", "constructor": false, "factory": { "name": "Picimo.events.eventize", "args": [ { "name": "obj", "type": "object", "nullable": false, "optional": false } ] }, "functions": [ { "name": "on", "args": [ { "name": "eventName", "type": "string" }, { "name": "prio", "type": "number", "default": "0", "optional": true }, { "name": "fn", "type": "function" } ], "returns": "number" }, { "name": "once", "args": [ { "name": "eventName", "type": "string" }, { "name": "prio", "type": "number", "default": "0", "optional": true }, { "name": "fn", "type": "function" } ], "returns": "number" }, { "name": "bind", "args": [ { "name": "obj", "type": "object" } ], "returns": "object" }, { "name": "off", "args": [ { "name": "id", "type": [ "number", "object" ] } ], "returns": "void" }, { "name": "emit", "args": [ { "name": "eventName", "type": "string" }, { "name": "arguments...", "type": "any" } ], "returns": "void" }, { "name": "emitReduce", "args": [ { "name": "eventName", "type": "string" }, { "name": "value", "type": "any" }, { "name": "arguments...", "type": "any" } ], "returns": "any" } ] } ] }, "Picimo.sg.Picture": { "name": "Picimo.sg.Picture", "type": "programming-interface", "interfaces": [ { "name": "Picimo.sg.Picture", "extends": [ "Picimo.events.CustomEvent" ], "constructor": { "args": [ { "name": "app", "type": "Picimo.App", "nullable": false, "optional": false }, { "name": "options", "type": "Picimo.sg.Picture.Options", "nullable": true, "optional": true } ] }, "attributes": [ { "name": "displayPosition", "type": "Picimo.sg.Picture.DisplayPosition" }, { "name": "displaySize", "type": "Picimo.sg.Picture.DisplaySize" }, { "name": "scaleX", "type": "number", "description": "horizontal scale *(default is 1.0)*" }, { "name": "scaleY", "type": "number", "description": "vertical scale *(default is 1.0)*" }, { "name": "opacity", "type": "number", "description": "opacity as value *[0..1]*" }, { "name": "posX", "type": "number", "description": "horizontal position" }, { "name": "posY", "type": "number", "description": "vertical position" }, { "name": "rotate", "type": "number", "description": "rotation in radian" }, { "name": "rotateDegree", "type": "number", "description": "rotation in degree" }, { "name": "sprite", "type": "any", "description": "The internal sprite used to render the picture." }, { "name": "program", "type": "string", "default": "picture", "description": "The shader program name." }, { "name": "texture", "type": "Picimo.core.Texture", "description": "The texture used to render the sprite." } ], "functions": [ { "name": "setPos", "returns": "Picimo.sg.Picture", "args": [ { "name": "x", "type": "number" }, { "name": "y", "type": "number" } ] }, { "name": "translate", "returns": "Picimo.sg.Picture", "args": [ { "name": "tx", "type": "number" }, { "name": "ty", "type": "number" } ] }, { "name": "setScale", "returns": "Picimo.sg.Picture", "args": [ { "name": "sx", "type": "number" }, { "name": "sy", "type": "number" } ] }, { "name": "setZoom", "returns": "Picimo.sg.Picture", "args": [ { "name": "zoom", "type": "number" } ] }, { "name": "setRgb", "returns": "Picimo.sg.Picture", "args": [ { "name": "red", "type": "number" }, { "name": "green", "type": "number" }, { "name": "blue", "type": "number" } ] }, { "name": "setRgba", "returns": "Picimo.sg.Picture", "args": [ { "name": "red", "type": "number" }, { "name": "green", "type": "number" }, { "name": "blue", "type": "number" }, { "name": "alpha", "type": "number" } ] }, { "name": "setVertexPositions", "returns": "void", "args": [ { "name": "x0", "type": "number" }, { "name": "y0", "type": "number" }, { "name": "x1", "type": "number" }, { "name": "y1", "type": "number" }, { "name": "x2", "type": "number" }, { "name": "y2", "type": "number" }, { "name": "x3", "type": "number" }, { "name": "y3", "type": "number" } ] } ] } ], "dictionaries": [ { "name": "Picimo.sg.Picture.Options", "attributes": [ { "name": "texture", "type": [ "Picimo.core.Texture", "Promise<picimo.core.texture>" ], "required": true, "description": "The texture is mandatory. If you don't specify a texture you will see nothing." }, { "name": "displaySize", "type": "Picimo.sg.Picture.DisplaySize", "default": "'contain'", "description": "You should specify either of *displaySize* or *displayPosition*.\nIf both properties are *not* specified the *displaySize* will be set to `'contain'`.\nSee [Picimo.sg.Picture.DisplaySize](#) for more information.\n" }, { "name": "displayPosition", "type": "Picimo.sg.Picture.DisplayPosition", "description": "The *displayPosition* property has precedence over the *displaySize* property. If specified *displaySize* will be ignored." }, { "name": "zoom", "type": "number", "default": "1" }, { "name": "posX", "type": "number", "default": "0" }, { "name": "posY", "type": "number", "default": "0" }, { "name": "opacity", "type": "number", "default": "1" } ] }, { "name": "Picimo.sg.Picture.DisplayPosition", "description": "The display position specifies how the picture is positioned *in relationship to the scene dimension*.\n\n![The Display Position](/assets/images/doc/displayPosition.png)\n![The Display Position Zoom](/assets/images/doc/displayPosition zoom.png)\n", "attributes": [ { "name": "top", "type": [ "number", "string" ], "description": "Set the top edge of the image under the top edge of the parent scene.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of scene height_** (if value is a *string* &mdash; eg. `'50%'`)\n" }, { "name": "left", "type": [ "number", "string" ], "description": "Set the left edge of the image right to the left edge of the parent scene.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of scene width_** (if value is a *string* &mdash; eg. `'50%'`)\n" }, { "name": "bottom", "type": [ "number", "string" ], "description": "Set the bottom edge of the image above the bottom edge of the parent scene.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of scene height_** (if value is a *string* &mdash; eg. `'50%'`)\n" }, { "name": "right", "type": [ "number", "string" ], "description": "Set the right edge of the image left to the right edge of the parent scene.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of scene width_** (if value is a *string* &mdash; eg. `'50%'`)\n" }, { "name": "width", "type": [ "number", "string" ], "description": "Set the width of the image.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of image width_** (if value is a *string* &mdash; eg. `'50%'`)\n" }, { "name": "height", "type": [ "number", "string" ], "description": "Set the height of the image.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of image height_** (if value is a *string* &mdash; eg. `'50%'`)\n" }, { "name": "zoom", "type": "number", "description": "Set the zoom factor.\n\nDefault is `1.0` (no zoom). If set to `2.0` the size of the image will be _doubled_.\n" }, { "name": "anchorX", "type": "number" }, { "name": "anchorY", "type": "number" } ] } ], "enums": [ { "name": "Picimo.sg.Picture.DisplaySize", "description_post": "![The Display Size Property](/assets/images/doc/displaySize.png)\n\nThe display size specifies the size of the picture.\n\n- **contain** will always show the whole image but may not fill up the whole screen area.\n- **cover** will always fill the whole screen area, but the image may be cropped.\n\nBoth strategies will preserve the image size ratio.\n", "values": [ { "name": "contain" }, { "name": "cover" } ] } ] }, "Picimo.sg.Scene": { "name": "Picimo.sg.Scene", "type": "programming-interface", "interfaces": [ { "name": "Picimo.sg.Scene", "description": "![Scene Coordinate System](/assets/images/doc/coordinates.png)", "attributes": [ { "name": "app", "type": "Picimo.App", "readonly": true }, { "name": "scene", "type": "Picimo.sg.Scene", "readonly": true, "description": "The parent scene. Every scene has a parent scene &mdash; unless the root scene &mdash; for the root scene this value is `undefined`." }, { "name": "projection", "type": "Picimo.math.Matrix4", "readonly": true }, { "name": "hasOwnProjection", "type": "boolean", "readonly": true }, { "name": "projectionNeedsUpdate", "type": "boolean", "readonly": false }, { "name": "blendMode", "type": "Picimo.webgl.cmd.BlendMode", "readonly": false }, { "name": "sizeVariety", "type": "string", "readonly": false }, { "name": "width", "type": "number", "readonly": true }, { "name": "height", "type": "number", "readonly": true }, { "name": "pixelRatio", "type": "number", "readonly": true }, { "name": "devicePixelRatio", "type": "number", "readonly": true } ], "functions": [ { "name": "setSize", "args": [ { "name": "width", "type": "number" }, { "name": "height", "type": "number" }, { "name": "sizeVariety", "type": "string", "default": "'contain'", "optional": true } ], "returns": "Picimo.sg.Scene" }, { "name": "appendPicture", "args": [ { "name": "url", "type": "string" }, { "name": "options", "type": "Picimo.sg.Picture.Options" } ], "returns": "Picimo.sg.Picture" }, { "name": "appendSpriteGroup", "args": [ { "name": "textureAtlas", "type": [ "Picimo.core.TextureAtlas", "Promise" ] }, { "name": "options", "type": "Picimo.sg.SpriteGroup.Options" } ], "returns": "Picimo.sg.SpriteGroup" } ], "constructor": { "args": [ { "name": "app", "type": "Picimo.App", "nullable": false, "optional": false }, { "name": "options", "type": "Picimo.sg.Scene.Options", "nullable": true, "optional": true } ] } } ], "dictionaries": [ { "name": "Picimo.sg.Scene.Options", "attributes": [ { "name": "width", "type": "number", "required": false }, { "name": "height", "type": "number", "required": false }, { "name": "pixelRatio", "type": "number", "required": false }, { "name": "sizeVariety", "type": "string", "required": false }, { "name": "projection", "type": "boolean", "required": false, "default": "true" }, { "name": "blendMode", "type": "Picimo.webgl.cmd.BlendMode", "required": false }, { "name": "onResize", "type": "function", "required": false }, { "name": "onProjectionUpdated", "type": "function", "required": false } ] } ] }, "internal-coding-guidelines": { "title": "Internal Coding Guidelines", "type": "topic", "tags": [ "advanced" ], "fileBaseName": "Internal_Coding_Guidelines", "name": "internal-coding-guidelines", "html": "<h4 id='\"app-renderer-glx-and-gl-properties\"'>app, renderer, glx and gl properties</h4>\n<p>Various notes and coding hints to make your life easier.</p>\n<ul>\n<li><strong>app</strong> or <strong>glx</strong> can be cached for later usage</li>\n<li>but <em>never</em> cache <strong>renderer</strong> or <strong>gl</strong> as instance properties</li>\n</ul>\n" }, "the-rendering-pipeline": { "title": "The Rendering Pipeline", "type": "topic", "tags": [ "advanced" ], "fileBaseName": "The_Rendering_Pipeline", "name": "the-rendering-pipeline", "html": "<p>Here is the big picture &mdash; you probably won&#39;t need to know the details &mdash;\nbut it could help if you want to understand a little bit more about the internal rendering flow.</p>\n<p><img src='\"/assets/images/doc/picimo-rendering-pipeline.png\"' alt='\"Picimo' rendering="" pipeline\"="" title='\"The' picimo=""></p>\n" } }, "package": { "name": "picimo", "version": "0.0.2", "author": { "name": "Wolfger Schramm", "email": "wolfger@spearwolf.de", "url": "https://github.com/spearwolf" }, "repository": { "type": "git", "url": "https://github.com/spearwolf/picimo.git" }, "license": "Apache-2.0", "homepage": "https://github.com/spearwolf/picimo/", "bugs": { "url": "https://github.com/spearwolf/picimo/issues" } }, "programming-interface": [ "Picimo.App", "Picimo.events.CustomEvent", "Picimo.sg.Picture", "Picimo.sg.Scene" ], "topic": [ "internal-coding-guidelines", "the-rendering-pipeline" ] }</picimo.core.texture></picimo.core.texture></picimo.core.textureatlas></canvas></canvas>