{
  "ref": {
    "AppOpts": {
      "name": "AppOpts",
      "type": "programming-interface",
      "dictionaries": [
        {
          "name": "AppOpts",
          "attributes": [
            {
              "name": "alpha",
              "type": "boolean",
              "default": "false",
              "required": false
            },
            {
              "name": "antialias",
              "type": "boolean",
              "default": "false"
            },
            {
              "name": "canvas",
              "type": "HTMLCanvasElement",
              "default": "null"
            },
            {
              "name": "appendTo",
              "type": "HTMLElement",
              "default": "null"
            },
            {
              "name": "bgColor",
              "type": [
                "string",
                "Picimo.utils.Color"
              ],
              "default": "'#000000'"
            },
            {
              "name": "assetBaseUrl",
              "type": "string",
              "default": "null"
            }
          ]
        }
      ]
    },
    "CanvasOpts": {
      "name": "CanvasOpts",
      "type": "programming-interface",
      "dictionaries": [
        {
          "name": "CanvasOpts",
          "extends": [
            "NodeOpts",
            "PictureOpts"
          ],
          "attributes": [
            {
              "name": "canvasSize",
              "type": [
                "number",
                "Array<number>",
                "{x,y,width,height}"
              ],
              "required": false,
              "description": "The texture viewport into the canvas. Describes which part of the canvas should be show'ed by the texture."
            },
            {
              "name": "canvas",
              "type": "HTMLCanvasElement",
              "required": false,
              "description": "A predefined canvas element. When not set, a canvas element will be created for you."
            },
            {
              "name": "alpha",
              "type": "boolean",
              "default": true,
              "required": false,
              "description": "Enable alpha support for the canvas context."
            },
            {
              "name": "autoClear",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "When set to true then on the begin of a frame the canvas will be cleared."
            },
            {
              "name": "autoUpdate",
              "type": "boolean",
              "default": false,
              "required": false,
              "description": "When set to true then the texture will be synced at every frame (at the end)."
            },
            {
              "name": "clearColor",
              "type": "string",
              "required": false,
              "description": "When set then the canvas will be cleared with this color (canvas.fillStyle)"
            }
          ]
        }
      ]
    },
    "DisplayPosition": {
      "name": "DisplayPosition",
      "type": "programming-interface",
      "dictionaries": [
        {
          "name": "DisplayPosition",
          "description": "The display position specifies how a image is positioned *in the context of the scene*.\n\nMost properties will support *number* or *string* as input. Using a *string* means you can choose between different units:\n\n| Type | Format | Unit | Description |\n|------|------------|----------|---------|\n| number | _any number_ | __px__ | pixel |\n| string | `32px` | __px__ | pixel |\n| string | `100iw` | __iw__ | image width percentage |\n| string | `50.0ih` | __ih__ | image height percentage |\n| string | `-80sw` | __sw__ | scene width percentage |\n| string | `-1.1sh` | __sh__ | scene height percentage |\n| string | `100 %` | __%__ | _see property description for the unit_ |\n\n![The Display Position](/assets/images/doc/displayPosition.png)\n![The Display Position Zoom](/assets/images/doc/displayPosition zoom.png)\n",
          "attributes": [
            {
              "name": "top",
              "type": [
                "number",
                "string"
              ],
              "description": "Set the top edge of the image under the top edge of the parent scene.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of scene height_** (if value is a *string* &mdash; eg. `'50%'`)\n"
            },
            {
              "name": "left",
              "type": [
                "number",
                "string"
              ],
              "description": "Set the left edge of the image right to the left edge of the parent scene.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of scene width_** (if value is a *string* &mdash; eg. `'50%'`)\n"
            },
            {
              "name": "bottom",
              "type": [
                "number",
                "string"
              ],
              "description": "Set the bottom edge of the image above the bottom edge of the parent scene.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of scene height_** (if value is a *string* &mdash; eg. `'50%'`)\n"
            },
            {
              "name": "right",
              "type": [
                "number",
                "string"
              ],
              "description": "Set the right edge of the image left to the right edge of the parent scene.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of scene width_** (if value is a *string* &mdash; eg. `'50%'`)\n"
            },
            {
              "name": "width",
              "type": [
                "number",
                "string"
              ],
              "description": "Set the width of the image.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of image width_** (if value is a *string* &mdash; eg. `'50%'`)\n"
            },
            {
              "name": "height",
              "type": [
                "number",
                "string"
              ],
              "description": "Set the height of the image.\n\nThe unit is either of **px** (if value is a *number*) or of **percantage _of image height_** (if value is a *string* &mdash; eg. `'50%'`)\n"
            },
            {
              "name": "zoom",
              "type": "number",
              "description": "Set the zoom factor.\n\nDefault is `1.0` (no zoom). If set to `2.0` the size of the image will be _doubled_.\n"
            },
            {
              "name": "anchorX",
              "type": "number",
              "description": "TODO"
            },
            {
              "name": "anchorY",
              "type": "number",
              "description": "TODO"
            }
          ]
        }
      ]
    },
    "NodeOpts": {
      "name": "NodeOpts",
      "type": "programming-interface",
      "dictionaries": [
        {
          "name": "NodeOpts",
          "attributes": [
            {
              "name": "renderPrio",
              "type": "number",
              "required": false,
              "default": "0",
              "description": "The render priority of this node. Defaults to `0`."
            },
            {
              "name": "display",
              "type": "number",
              "required": false,
              "default": true,
              "description": "The initial display state. Defaults to `true`."
            },
            {
              "name": "ready",
              "type": [
                "boolean",
                "function"
              ],
              "required": false,
              "default": true,
              "description": "The initial ready state. Defaults to `true`."
            },
            {
              "name": "name",
              "type": "string",
              "required": false,
              "description": "The name of the node."
            },
            {
              "name": "parentNode",
              "type": "Picimo.graph.Node",
              "required": false,
              "description": "When not set then this node will be acting as root node."
            },
            {
              "name": "onInit",
              "type": "function",
              "required": false
            },
            {
              "name": "onInitGl",
              "type": "function",
              "required": false
            },
            {
              "name": "onFrame",
              "type": "function",
              "required": false
            },
            {
              "name": "onRenderFrame",
              "type": "function",
              "required": false
            },
            {
              "name": "onFrameEnd",
              "type": "function",
              "required": false
            },
            {
              "name": "onDestroyGl",
              "type": "function",
              "required": false
            },
            {
              "name": "onDestroy",
              "type": "function",
              "required": false
            },
            {
              "name": "onChildrenUpdated",
              "type": "function",
              "required": false
            }
          ]
        }
      ]
    },
    "ObjectFit": {
      "name": "ObjectFit",
      "type": "programming-interface",
      "enums": [
        {
          "name": "ObjectFit",
          "description_after_idl": "![The Object Fit Property](/assets/images/doc/displaySize.png)\n\nThe object fit describes how an object size is computed in relation to its container area.\n\n- **contain** will always show the whole object but may not fill up the whole area.\n- **cover** will always fill the whole area, but the object may be cropped.\n\nBoth strategies will preserve the object size ratio.\n",
          "values": [
            {
              "name": "contain"
            },
            {
              "name": "cover"
            }
          ]
        }
      ]
    },
    "Picimo.App": {
      "name": "Picimo.App",
      "type": "programming-interface",
      "interfaces": [
        {
          "name": "Picimo.App",
          "description": "The main interface to your *picimo* application.\n",
          "attributes": [
            {
              "separator": true,
              "title": "scene graph"
            },
            {
              "name": "scene",
              "type": "Picimo.graph.Scene",
              "readonly": true,
              "description": "The *root* node of your scene graph"
            },
            {
              "separator": true,
              "title": "time"
            },
            {
              "name": "now",
              "type": "number",
              "description": "Number of seconds from application start",
              "readonly": true
            },
            {
              "name": "frameNo",
              "type": "number",
              "description": "Current frame number",
              "readonly": true
            },
            {
              "separator": true,
              "title": "asset urls"
            },
            {
              "name": "assetBaseUrl",
              "type": "string",
              "nullable": true,
              "description": "The base url for all assets.\nThis is *optional* and value may be `null` (or `undefined`).\nThis url can also be set with the [assetBaseUrl](#app-opts) option or\nas an alternative you can define a global variable `PICIMO_ASSET_BASE_URL`\n(this will override the option).\nIf unset the url will be calculated from `location.href`\n"
            },
            {
              "separator": true,
              "title": "html dom context"
            },
            {
              "name": "canvas",
              "type": "HTMLCanvasElement",
              "readonly": true,
              "description": "The `<canvas>` dom element"
            },
            {
              "name": "canvasIsPredefined",
              "type": "boolean",
              "readonly": true
            },
            {
              "name": "backgroundColor",
              "type": "Picimo.utils.Color",
              "description": "Default background color is __black__ or if you activate the [alpha](#app-opts) option then your canvas will be set to _transparent_"
            },
            {
              "name": "width",
              "type": "number",
              "readonly": true,
              "description": "_Device_ pixel width"
            },
            {
              "name": "height",
              "type": "number",
              "readonly": true,
              "description": "_Device_ pixel height"
            }
          ],
          "functions": [
            {
              "separator": true,
              "title": "texture management"
            },
            {
              "name": "loadTextureAtlas",
              "args": [
                {
                  "name": "url",
                  "type": "string"
                }
              ],
              "returns": "Promise<Picimo.core.TextureAtlas>"
            },
            {
              "name": "loadTexture",
              "args": [
                {
                  "name": "url",
                  "type": "string"
                }
              ],
              "returns": "Promise<Picimo.core.Texture>"
            },
            {
              "separator": true,
              "title": "asset url helpers"
            },
            {
              "name": "getAssetUrl",
              "args": [
                {
                  "name": "url",
                  "type": "string"
                }
              ],
              "returns": "string"
            },
            {
              "name": "joinAssetUrl",
              "args": [
                {
                  "name": "baseUrl",
                  "type": "string"
                },
                {
                  "name": "url",
                  "type": "string"
                }
              ],
              "returns": "string"
            },
            {
              "separator": true,
              "title": "sprite management"
            },
            {
              "name": "defineSprite",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "descriptor",
                  "type": "VertexObjectDescription"
                },
                {
                  "name": "proto",
                  "type": "object"
                }
              ],
              "returns": "Picimo.core.VertexObjectDescriptor"
            },
            {
              "name": "createSprite",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                }
              ],
              "returns": "Picimo.core.VertexObject"
            },
            {
              "separator": true,
              "title": "shader management"
            },
            {
              "name": "defineVertexShader",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "source",
                  "type": "string"
                }
              ],
              "returns": "Picimo.App"
            },
            {
              "name": "defineFragmentShader",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "source",
                  "type": "string"
                }
              ],
              "returns": "Picimo.App"
            },
            {
              "name": "loadVertexShader",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "url",
                  "type": "string"
                }
              ],
              "returns": "Promise<Picimo.render.ShaderSource>"
            },
            {
              "name": "loadFragmentShader",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "url",
                  "type": "string"
                }
              ],
              "returns": "Promise<Picimo.render.ShaderSource>"
            },
            {
              "name": "getVertexShader",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                }
              ],
              "returns": "Picimo.render.ShaderSource"
            },
            {
              "name": "getFragmentShader",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                }
              ],
              "returns": "Picimo.render.ShaderSource"
            },
            {
              "name": "addProgram",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "name": "vertexShaderName",
                  "type": "string"
                },
                {
                  "name": "fragmentShaderName",
                  "type": "string"
                }
              ],
              "returns": "Picimo.App"
            },
            {
              "name": "getProgram",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                }
              ],
              "returns": "Picimo.render.Program"
            }
          ],
          "constructor": {
            "args": [
              {
                "name": "canvas",
                "type": "HTMLCanvasElement",
                "nullable": true,
                "optional": true
              },
              {
                "name": "options",
                "type": "AppOpts",
                "nullable": true,
                "optional": true
              }
            ]
          },
          "events": [
            {
              "name": "init",
              "description": "Will be called right after app creation time\n"
            },
            {
              "name": "resize",
              "description": "Canvas resized\n"
            },
            {
              "name": "frameBegin",
              "description": "The frame begins\n"
            },
            {
              "name": "frame",
              "description": "On frame event. The renderer has been initialized,\nbut this will be thrown before the scene graph is rendered\n"
            },
            {
              "name": "renderFrame",
              "description": "On frame event. The renderer has been initialized\nand the scene graph is executed but the renderer is not yet finished,\nso this is your last call to push additional render commands to command queue\n"
            },
            {
              "name": "frameEnd",
              "description": "The frame ends\n"
            }
          ]
        }
      ]
    },
    "Picimo.core.Texture": {
      "name": "Picimo.core.Texture",
      "type": "programming-interface",
      "interfaces": [
        {
          "name": "Picimo.core.Texture",
          "description_after_idl": "#### Example\n```\nlet c = document.createElement(\"canvas\");\nlet t = new Picimo.core.Texture.fromCanvas(c);\nt.width    // => 300\nt.height   // => 150\n\nlet tt = new Picimo.core.Texture( t, 30, 15, 100, 100 )\nt.width    // => 100\n```\n",
          "attributes": [
            {
              "name": "width",
              "type": "number"
            },
            {
              "name": "height",
              "type": "number"
            },
            {
              "name": "image",
              "type": [
                "HTMLCanvasElement",
                "HTMLImageElement"
              ]
            }
          ],
          "functions": [
            {
              "name": "setTexCoords",
              "args": [
                {
                  "name": "obj",
                  "type": "Object"
                }
              ],
              "returns": "void"
            }
          ],
          "constructor": {
            "args": [
              {
                "name": "parent",
                "type": "Picimo.core.Texture",
                "nullable": true,
                "optional": true
              },
              {
                "name": "x",
                "type": "number",
                "nullable": true,
                "optional": true
              },
              {
                "name": "y",
                "type": "number",
                "nullable": true,
                "optional": true
              },
              {
                "name": "width",
                "type": "number",
                "nullable": true,
                "optional": true
              },
              {
                "name": "height",
                "type": "number",
                "nullable": true,
                "optional": true
              }
            ]
          }
        }
      ]
    },
    "Picimo.graph.Canvas": {
      "name": "Picimo.graph.Canvas",
      "type": "programming-interface",
      "interfaces": [
        {
          "name": "Picimo.graph.Canvas",
          "extends": [
            "Picimo.graph.Node",
            "Picimo.graph.Picture"
          ],
          "constructor": {
            "args": [
              {
                "name": "app",
                "type": "Picimo.App",
                "nullable": false,
                "optional": false
              },
              {
                "name": "options",
                "type": "CanvasOpts",
                "nullable": true,
                "optional": true
              }
            ]
          },
          "attributes": [
            {
              "name": "canvas",
              "type": "HTMLCanvasElement",
              "description": "The HTMLCanvasElement interface.\n"
            },
            {
              "name": "alpha",
              "type": "boolean",
              "description": "Flag to indicate that the canvas context has alpha support enabled."
            },
            {
              "name": "dimension",
              "type": "Picimo.core.Viewport",
              "description": "Describes the texture viewport into the canvas.\n"
            },
            {
              "name": "autoClear",
              "type": "boolean",
              "description": "When set to true then on the begin of a frame the canvas will be cleared."
            },
            {
              "name": "clearColor",
              "type": "string",
              "description": "When set then the canvas will be cleared with this color (canvas.fillStyle)"
            },
            {
              "name": "autoUpdate",
              "type": "boolean",
              "description": "When set to true then the texture will be synced at every frame (at the end)."
            }
          ],
          "functions": [
            {
              "name": "update",
              "returns": "void",
              "description": "Sync the texture with current canvas content."
            }
          ]
        }
      ]
    },
    "Picimo.graph.Node": {
      "name": "Picimo.graph.Node",
      "type": "programming-interface",
      "interfaces": [
        {
          "name": "Picimo.graph.Node",
          "description": "The base class that all other scene graph nodes extend.\n",
          "description_after_events": "#### Node States and Events\n<img src=\"/assets/images/doc/node-events.png\" srcset=\"/assets/images/doc/node-events.png 1x,/assets/images/doc/node-events@2x.png 2x\" alt=\"Node Events and States\">\n",
          "attributes": [
            {
              "name": "name",
              "type": "string",
              "description": "The node name is optional. You can search for a node by name with `findNode()`."
            },
            {
              "separator": true,
              "title": "scene graph"
            },
            {
              "name": "app",
              "type": "Picimo.App",
              "readonly": true,
              "description": "The picimo app instance."
            },
            {
              "name": "parentNode",
              "type": "Picimo.graph.Node",
              "readonly": true,
              "description": "The parent node or `null`."
            },
            {
              "name": "isRootNode",
              "type": "boolean",
              "readonly": true,
              "description": "Returns `parent == null`"
            },
            {
              "name": "renderPrio",
              "type": "number",
              "description": "Die render priority bestimmt die Reihenfolge in der die Nodes\nmittels `renderFrame()` aufgerufen werden.\n"
            },
            {
              "name": "children",
              "type": "Picimo.graph.Node[]",
              "readonly": false,
              "description": "Every node can have children.\n"
            },
            {
              "separator": true,
              "title": "state"
            },
            {
              "name": "state",
              "type": "Picimo.graph.NodeState"
            },
            {
              "name": "ready",
              "type": "boolean",
              "description": "When set to `false` this node will be ignored by *initialization* and *rendering* process.\n"
            },
            {
              "name": "readyFunc",
              "type": "function",
              "description": "Accepts a boolean value or a function. When the ready function returns a *truthy* value then this is node is *ready*.\n"
            },
            {
              "name": "display",
              "type": "boolean",
              "description": "When set to `false` the node will not be displayed. The *frame*, *renderFrame* and *frameEnd* events will not be called.\nBUT `init` and `initGl` will be called. If you don't want to initialize the node set the *ready* attribute to `false`.\n"
            }
          ],
          "functions": [
            {
              "name": "appendChild",
              "args": [
                {
                  "name": "node",
                  "type": "Picimo.graph.Node"
                }
              ],
              "returns": "Picimo.graph.Node"
            },
            {
              "name": "removeChild",
              "args": [
                {
                  "name": "node",
                  "type": "Picimo.graph.Node"
                }
              ],
              "returns": "Picimo.graph.Node"
            },
            {
              "name": "findNode",
              "args": [
                {
                  "name": "name",
                  "type": "string"
                }
              ],
              "returns": "Picimo.graph.Node"
            },
            {
              "name": "renderFrame",
              "returns": "void"
            },
            {
              "name": "destroy",
              "returns": "void"
            }
          ],
          "constructor": {
            "args": [
              {
                "name": "app",
                "type": "Picimo.App",
                "nullable": false,
                "optional": false
              },
              {
                "name": "options",
                "type": "NodeOpts",
                "nullable": true,
                "optional": true
              }
            ]
          },
          "events": [
            {
              "name": "init",
              "args": [
                {
                  "name": "done",
                  "type": "function"
                }
              ],
              "description": "Initialize your node!\nWhen your *init is __async__* call `done()` with your `Promise` as first argument.\n"
            },
            {
              "name": "initGl",
              "args": [
                {
                  "name": "done",
                  "type": "function"
                }
              ],
              "description": "Initialize webgl resources here if needed!\nWhen your *init is __async__* call `done()` with your `Promise` as first argument.\n"
            },
            {
              "name": "childrenUpdated",
              "description": "A child node was added or removed."
            },
            {
              "name": "frame",
              "description": "A new frame begins!"
            },
            {
              "name": "renderFrame",
              "description": "Time to create your render commands here!"
            },
            {
              "name": "frameEnd",
              "description": "The frame ends. All your children completed the frame."
            },
            {
              "name": "destroyGl",
              "description": "Free all your webgl resources!"
            },
            {
              "name": "destroy",
              "description": "Destroy or release all additional resources allocated by this node."
            }
          ]
        }
      ]
    },
    "Picimo.graph.Picture": {
      "name": "Picimo.graph.Picture",
      "type": "programming-interface",
      "interfaces": [
        {
          "name": "Picimo.graph.Picture",
          "extends": [
            "Picimo.graph.Node"
          ],
          "constructor": {
            "args": [
              {
                "name": "app",
                "type": "Picimo.App",
                "nullable": false,
                "optional": false
              },
              {
                "name": "options",
                "type": "PictureOpts",
                "nullable": true,
                "optional": true
              }
            ]
          },
          "attributes": [
            {
              "name": "displayPosition",
              "type": "DisplayPosition",
              "description": "Describe the position where the picture is placed on the scene.\nWhen set the *sceneFit* property will be ignored.\n"
            },
            {
              "name": "sceneFit",
              "type": "ObjectFit",
              "description": "Describe how the picture dimension should be computed in relation to the scene dimension.\nThis property has no effect if the *displayPosition* property is defined.\n"
            },
            {
              "name": "scale",
              "type": "number",
              "description": "scale factor *(default is 1.0)*"
            },
            {
              "name": "opacity",
              "type": "number",
              "description": "opacity as value *[0..1]*"
            },
            {
              "name": "rotate",
              "type": "number",
              "description": "rotation in radian"
            },
            {
              "name": "rotateDegree",
              "type": "number",
              "description": "rotation in degree"
            },
            {
              "name": "posX",
              "type": [
                "number",
                "string"
              ],
              "description": "The horizontal position. Supports all the units from [DisplayPosition](#).\n"
            },
            {
              "name": "posY",
              "type": [
                "number",
                "string"
              ],
              "description": "The vertical position. Supports all the units from [DisplayPosition](#).\n"
            },
            {
              "name": "program",
              "type": "string",
              "default": "picture",
              "description": "The shader program name."
            },
            {
              "name": "texture",
              "type": "Picimo.core.Texture",
              "description": "The texture used to render the sprite."
            }
          ],
          "functions": [
            {
              "name": "setPos",
              "description": "Set the image position",
              "returns": "Picimo.graph.Picture",
              "args": [
                {
                  "name": "x",
                  "type": [
                    "number",
                    "string"
                  ]
                },
                {
                  "name": "y",
                  "type": [
                    "number",
                    "string"
                  ]
                }
              ]
            },
            {
              "name": "setScale",
              "returns": "Picimo.graph.Picture",
              "args": [
                {
                  "name": "scale",
                  "type": "number"
                }
              ]
            },
            {
              "name": "setVertexPositions",
              "returns": "void",
              "args": [
                {
                  "name": "x0",
                  "type": "number"
                },
                {
                  "name": "y0",
                  "type": "number"
                },
                {
                  "name": "x1",
                  "type": "number"
                },
                {
                  "name": "y1",
                  "type": "number"
                },
                {
                  "name": "x2",
                  "type": "number"
                },
                {
                  "name": "y2",
                  "type": "number"
                },
                {
                  "name": "x3",
                  "type": "number"
                },
                {
                  "name": "y3",
                  "type": "number"
                }
              ]
            }
          ]
        }
      ]
    },
    "Picimo.graph.Scene": {
      "name": "Picimo.graph.Scene",
      "type": "programming-interface",
      "interfaces": [
        {
          "name": "Picimo.graph.Scene",
          "extends": [
            "Picimo.graph.Node"
          ],
          "description": "![Scene Coordinate System](/assets/images/doc/coordinates.png)",
          "attributes": [
            {
              "name": "scene",
              "type": "Picimo.graph.Scene",
              "readonly": true,
              "description": "The parent scene. Every scene has a parent scene &mdash; unless the root scene &mdash; for the root scene this value is `undefined`."
            },
            {
              "name": "projection",
              "type": "Picimo.math.Matrix4",
              "readonly": true,
              "description": "The projection matrix."
            },
            {
              "name": "hasOwnProjection",
              "type": "boolean",
              "readonly": true
            },
            {
              "name": "projectionNeedsUpdate",
              "type": "boolean",
              "readonly": false
            },
            {
              "name": "transform",
              "type": "Picimo.math.Matrix4",
              "description": "The local transformation matrix. Change it to pan or zoom or whatever you want with the scene."
            },
            {
              "name": "blendMode",
              "type": "Picimo.render.cmd.BlendMode",
              "readonly": false
            },
            {
              "name": "sizeFit",
              "type": "ObjectFit",
              "readonly": false,
              "description": "The size fit property describes how the scene dimension is computed\nin relation to the scene container. When there is no containing scene the\napp viewport is used instead.\n"
            },
            {
              "name": "width",
              "type": "number",
              "readonly": true
            },
            {
              "name": "height",
              "type": "number",
              "readonly": true
            },
            {
              "name": "pixelRatio",
              "type": "number",
              "readonly": true
            },
            {
              "name": "devicePixelRatio",
              "type": "number",
              "readonly": true
            }
          ],
          "functions": [
            {
              "name": "setSize",
              "args": [
                {
                  "name": "width",
                  "type": "number"
                },
                {
                  "name": "height",
                  "type": "number"
                },
                {
                  "name": "sizeFit",
                  "type": "ObjectFit",
                  "default": "'contain'",
                  "optional": true
                }
              ],
              "returns": "Picimo.graph.Scene"
            },
            {
              "name": "setBlendMode",
              "args": [
                {
                  "name": "depthTest",
                  "type": "boolean"
                },
                {
                  "name": "depthMask",
                  "type": "boolean"
                },
                {
                  "name": "depthFunc",
                  "type": "string",
                  "optional": true
                },
                {
                  "name": "blend",
                  "type": "boolean",
                  "optional": true
                },
                {
                  "name": "blendFuncSrc",
                  "type": "string",
                  "optional": true
                },
                {
                  "name": "blendFuncDst",
                  "type": "string",
                  "optional": true
                }
              ],
              "returns": "Picimo.render.cmd.BlendMode"
            },
            {
              "separator": true,
              "title": "Scene graph node factories"
            },
            {
              "name": "appendScene",
              "args": [
                {
                  "name": "options",
                  "type": "SceneOpts"
                }
              ],
              "returns": "Picimo.graph.Scene"
            },
            {
              "name": "appendPicture",
              "args": [
                {
                  "name": "url",
                  "type": "string"
                },
                {
                  "name": "options",
                  "type": "PictureOpts"
                }
              ],
              "returns": "Picimo.graph.Picture"
            },
            {
              "name": "appendCanvas",
              "args": [
                {
                  "name": "canvasSize",
                  "type": [
                    "number",
                    "Array<number>",
                    "{x,y,width,height}"
                  ]
                },
                {
                  "name": "options",
                  "type": "CanvasOpts"
                }
              ],
              "returns": "Picimo.graph.Canvas"
            },
            {
              "name": "appendSpriteGroup",
              "args": [
                {
                  "name": "textureAtlas",
                  "type": [
                    "Picimo.core.TextureAtlas",
                    "Promise"
                  ]
                },
                {
                  "name": "options",
                  "type": "SpriteGroupOpts"
                }
              ],
              "returns": "Picimo.graph.SpriteGroup"
            }
          ],
          "constructor": {
            "args": [
              {
                "name": "app",
                "type": "Picimo.App",
                "nullable": false,
                "optional": false
              },
              {
                "name": "options",
                "type": "SceneOpts",
                "nullable": true,
                "optional": true
              }
            ]
          }
        }
      ]
    },
    "Picimo.graph.SpriteGroup": {
      "name": "Picimo.graph.SpriteGroup",
      "type": "programming-interface",
      "interfaces": [
        {
          "name": "Picimo.graph.SpriteGroup",
          "extends": [
            "Picimo.graph.Node"
          ],
          "description": "A sprite group renders a group of sprites to the scene.\nAll vertex data will be will be uploaded to the GPU *every frame*.\nSo that's why you should choose the capacity carefully.\n",
          "attributes": [
            {
              "name": "textureAtlas",
              "type": "Picimo.core.TextureAtlas"
            },
            {
              "name": "program",
              "type": "string",
              "description": "The gl program name."
            },
            {
              "name": "spriteDescriptor",
              "type": "Picimo.core.VertexObjectDescriptor",
              "description": "The sprite descriptor."
            },
            {
              "name": "pool",
              "type": "Picimo.core.VertexObjectPool",
              "description": "The sprite objects pool."
            },
            {
              "name": "defaultSpriteWidth",
              "type": "number"
            },
            {
              "name": "defaultSpriteHeight",
              "type": "number"
            }
          ],
          "functions": [
            {
              "name": "setDefaultSpriteSize",
              "args": [
                {
                  "name": "width",
                  "type": "number"
                },
                {
                  "name": "height",
                  "type": "number"
                }
              ],
              "returns": "void"
            },
            {
              "name": "createSprite",
              "args": [
                {
                  "name": "texture",
                  "type": "string",
                  "optional": true
                },
                {
                  "name": "width",
                  "type": "number",
                  "optional": true
                },
                {
                  "name": "height",
                  "type": "number",
                  "optional": true
                }
              ],
              "returns": "Picimo.core.VertexObject"
            }
          ],
          "constructor": {
            "args": [
              {
                "name": "app",
                "type": "Picimo.App",
                "nullable": false,
                "optional": false
              },
              {
                "name": "options",
                "type": "SpriteGroupOpts",
                "nullable": true,
                "optional": true
              }
            ]
          }
        }
      ]
    },
    "PictureOpts": {
      "name": "PictureOpts",
      "type": "programming-interface",
      "dictionaries": [
        {
          "name": "PictureOpts",
          "extends": [
            "NodeOpts"
          ],
          "attributes": [
            {
              "name": "texture",
              "type": [
                "Picimo.core.Texture",
                "Promise<Picimo.core.Texture>"
              ],
              "required": true,
              "description": "The texture is mandatory. If you don't specify a texture you will see nothing."
            },
            {
              "name": "sceneFit",
              "type": "ObjectFit",
              "default": "'contain'",
              "description": "You should specify either of *sceneFit* or *displayPosition*.\nIf both properties are *not* specified the *sceneFit* will be set to `'contain'`.\nSee [ObjectFit](#) for more information.\n"
            },
            {
              "name": "displayPosition",
              "type": "DisplayPosition",
              "description": "The *displayPosition* property has precedence over the *sceneFit* property.\nWhen specified the *sceneFit* property will be ignored.\n"
            },
            {
              "name": "zoom",
              "type": "number",
              "default": "1"
            },
            {
              "name": "posX",
              "type": "number",
              "default": "0"
            },
            {
              "name": "posY",
              "type": "number",
              "default": "0"
            },
            {
              "name": "opacity",
              "type": "number",
              "default": "1"
            }
          ]
        }
      ]
    },
    "SceneOpts": {
      "name": "SceneOpts",
      "type": "programming-interface",
      "dictionaries": [
        {
          "name": "SceneOpts",
          "extends": [
            "NodeOpts"
          ],
          "attributes": [
            {
              "name": "width",
              "type": "number",
              "required": false
            },
            {
              "name": "height",
              "type": "number",
              "required": false
            },
            {
              "name": "pixelRatio",
              "type": "number",
              "required": false
            },
            {
              "name": "sizeFit",
              "type": "ObjectFit",
              "required": false,
              "default": "'contain'",
              "description": "The size fit option describes how the scene dimension is computed\nin relation to the scene container.\n"
            },
            {
              "name": "projection",
              "type": "boolean",
              "required": false,
              "default": "true"
            },
            {
              "name": "blendMode",
              "type": "Picimo.render.cmd.BlendMode",
              "required": false
            },
            {
              "name": "onResize",
              "type": "function",
              "required": false
            },
            {
              "name": "onProjectionUpdated",
              "type": "function",
              "required": false
            }
          ]
        }
      ]
    },
    "SpriteGroupOpts": {
      "name": "SpriteGroupOpts",
      "type": "programming-interface",
      "dictionaries": [
        {
          "name": "SpriteGroupOpts",
          "extends": [
            "NodeOpts"
          ],
          "attributes": [
            {
              "name": "textureAtlas",
              "type": "Picimo.core.TextureAtlas",
              "required": true
            },
            {
              "name": "capacity",
              "type": "number",
              "required": false,
              "default": 1000,
              "description": "The max sprite count.\n"
            },
            {
              "name": "program",
              "type": "string",
              "required": false,
              "default": "'picimo.sprite'"
            },
            {
              "name": "sprites",
              "type": "string",
              "required": false,
              "default": "'sprite'",
              "description": "The vertex object descriptor name.\n\nA sprite group expects that a sprite instance (created by the vertex object descriptor)\nhas the following properties:\n\n| Type | Definition | Required | Comment |\n|------|------------|----------|---------|\n| Method | `setTexCoords(x0, y0, x1, y1, x2, y2, x3, y3)` | yes | |\n| Method | `setSize(w, h)` | yes | _px_ |\n| Method | `setScale(sx, sy)` | no | Either this or `scale=` |\n| Property | `scale=` | no | Either this or `setScale(..)` |\n| Property | `opacity=` | no | _[0..1]_ |\n"
            },
            {
              "name": "defaultWidth",
              "type": "number",
              "required": false,
              "description": "The default sprite width."
            },
            {
              "name": "defaultHeight",
              "type": "number",
              "required": false,
              "description": "The default sprite height."
            }
          ]
        }
      ]
    },
    "VertexObjectDescription": {
      "name": "VertexObjectDescription",
      "type": "programming-interface",
      "dictionaries": [
        {
          "name": "VertexObjectDescription",
          "attributes": [
            {
              "name": "constructor",
              "type": "function",
              "required": false,
              "description": "Constructor function for your sprite"
            },
            {
              "name": "vertexCount",
              "type": "number",
              "required": true,
              "description": "Number of vertices per sprite"
            },
            {
              "name": "vertexAttrCount",
              "type": "number",
              "required": true,
              "description": "Number of attributes per vertex"
            },
            {
              "name": "attributes",
              "type": "Array",
              "required": true,
              "description": "Sprite attributes description"
            },
            {
              "name": "alias",
              "type": "object",
              "required": false,
              "description": "Attribute alias descriptions"
            },
            {
              "name": "proto",
              "type": "object",
              "required": false,
              "description": "The prototype object for your sprite"
            }
          ]
        }
      ]
    },
    "bootstrapping": {
      "title": "Bootstrapping",
      "type": "guide",
      "fileBaseName": "Bootstrapping",
      "name": "bootstrapping",
      "html": "<p>You instantiate a <em>picimo</em> application by explicitly creating a <code>new Picimo.App</code> instance.</p>\n<h4 id=\"simple-example\">Simple Example</h4>\n<p>Assuming this <code>index.html</code>:</p>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;a picimo application!&lt;/title&gt;\n    &lt;style&gt;\n        html, body { height: 100%; }\n        body { margin: 0; padding: 0; }\n    &lt;/style&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;script src=&quot;picimo.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n        /* your bootstrapping code here */\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>We can use this minimal <em>picimo</em> application bootstrapping code:</p>\n<pre><code>var app = new Picimo.App({ alpha: false, bgColor: &#39;#a0c0e0&#39; });\n\n// Set pixel resolution\napp.scene.setSize(640, 480, &#39;contain&#39;);\n</code></pre><p>When you instantiate the <code>Picimo.App</code>, <em>picimo</em> performs the following tasks:</p>\n<ol>\n<li>It creates a webgl <code>&lt;canvas&gt;</code> context (in this case <em>without</em> alpha support)</li>\n<li>It appends the <code>&lt;canvas&gt;</code> to the body as child (because you didn&#39;t specify the <em>container</em> element).\nThis will create a fullscreen canvas, since you set the <code>&lt;body&gt;</code> (and <code>&lt;html&gt;</code>) height to 100%.</li>\n<li>It starts the main render loop and renders the scene (given that you didn&#39;t create some interesting scene graph nodes you\nwill only see a blank <em>blue</em> scene here as result).</li>\n</ol>\n<p><em>Congratulation!</em> You created you first <em>picimo</em> application.</p>\n<p>Now go on and create some more visual appealing stuff!\n<em>Picimo</em> offers some predefined scene graph nodes for you:</p>\n<ul>\n<li><a href=\"#picimo-graph-picture\" alt=\"Picimo.graph.Picture\" class=\"md__link md__link--type\">Picimo.graph.Picture</a></li>\n<li><a href=\"#picimo-graph-canvas\" alt=\"Picimo.graph.Canvas\" class=\"md__link md__link--type\">Picimo.graph.Canvas</a></li>\n<li><a href=\"#picimo-graph-sprite-group\" alt=\"Picimo.graph.SpriteGroup\" class=\"md__link md__link--type\">Picimo.graph.SpriteGroup</a></li>\n<li><a href=\"#picimo-graph-scene\" alt=\"Picimo.graph.Scene\" class=\"md__link md__link--type\">Picimo.graph.Scene</a></li>\n</ul>\n"
    },
    "internal-coding-guidelines": {
      "title": "Internal Coding Guidelines",
      "type": "topic",
      "tags": [
        "advanced"
      ],
      "fileBaseName": "Internal_Coding_Guidelines",
      "name": "internal-coding-guidelines",
      "html": "<h4 id=\"app-renderer-glx-and-gl-properties\">app, renderer, glx and gl properties</h4>\n<p>Various notes and coding hints to make your life easier.</p>\n<ul>\n<li><strong>app</strong> or <strong>glx</strong> can be cached for later usage</li>\n<li>but <em>never</em> cache <strong>renderer</strong> or <strong>gl</strong> as instance properties</li>\n</ul>\n"
    },
    "the-rendering-pipeline": {
      "title": "The Rendering Pipeline",
      "type": "topic",
      "tags": [
        "advanced"
      ],
      "fileBaseName": "The_Rendering_Pipeline",
      "name": "the-rendering-pipeline",
      "html": "<p>Here are some big picture overviews &mdash; you probably won&#39;t need to know the details &mdash;\nbut it could help if you want to understand a little bit more about the internal rendering flow.</p>\n<p><img src=\"/assets/images/doc/picimo-rendering-pipeline.png\" srcset=\"/assets/images/doc/picimo-rendering-pipeline.png 1x\" alt=\"Picimo rendering pipeline\"></p>\n<p>The following diagram describes the data flow for uniform values.</p>\n<p><img src=\"/assets/images/doc/picimo-renderer-uniforms.png\" srcset=\"/assets/images/doc/picimo-renderer-uniforms.png 1x\" alt=\"Picimo uniform data flows\"></p>\n"
    }
  },
  "package": {
    "name": "picimo",
    "version": "0.0.21",
    "author": {
      "name": "Wolfger Schramm",
      "email": "wolfger@spearwolf.de",
      "url": "https://github.com/spearwolf"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/spearwolf/picimo.git"
    },
    "license": "Apache-2.0",
    "homepage": "https://github.com/spearwolf/picimo/",
    "bugs": {
      "url": "https://github.com/spearwolf/picimo/issues"
    }
  },
  "programming-interface": [
    "AppOpts",
    "CanvasOpts",
    "DisplayPosition",
    "NodeOpts",
    "ObjectFit",
    "Picimo.App",
    "Picimo.core.Texture",
    "Picimo.graph.Canvas",
    "Picimo.graph.Node",
    "Picimo.graph.Picture",
    "Picimo.graph.Scene",
    "Picimo.graph.SpriteGroup",
    "PictureOpts",
    "SceneOpts",
    "SpriteGroupOpts",
    "VertexObjectDescription"
  ],
  "guide": [
    "bootstrapping"
  ],
  "topic": [
    "internal-coding-guidelines",
    "the-rendering-pipeline"
  ]
}